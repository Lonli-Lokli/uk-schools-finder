[debug] [2025-01-23T18:59:47.619Z] ----------------------------------------------------------------------
[debug] [2025-01-23T18:59:47.622Z] Command:       C:\Users\andreika\AppData\Local\nvs\default\node.exe C:\Users\andreika\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js ext:install ./node_modules/@firebase-web-authn/extension
[debug] [2025-01-23T18:59:47.622Z] CLI Version:   13.28.0
[debug] [2025-01-23T18:59:47.622Z] Platform:      win32
[debug] [2025-01-23T18:59:47.622Z] Node Version:  v22.12.0
[debug] [2025-01-23T18:59:47.623Z] Time:          Thu Jan 23 2025 18:59:47 GMT+0000 (Greenwich Mean Time)
[debug] [2025-01-23T18:59:47.623Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-01-23T18:59:47.712Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-01-23T18:59:47.713Z] > authorizing via signed-in user (lonli.lokli@gmail.com)
[debug] [2025-01-23T18:59:47.713Z] [iam] checking project uk-schools-finder for permissions ["firebase.projects.get","firebaseextensions.instances.create"]
[debug] [2025-01-23T18:59:47.714Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:47.714Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:47.715Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:testIamPermissions [none]
[debug] [2025-01-23T18:59:47.716Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:testIamPermissions x-goog-quota-user=projects/uk-schools-finder
[debug] [2025-01-23T18:59:47.716Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2025-01-23T18:59:48.417Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:testIamPermissions 200
[debug] [2025-01-23T18:59:48.418Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2025-01-23T18:59:48.420Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:48.420Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:48.420Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/uk-schools-finder/services/firebaseextensions.googleapis.com [none]
[debug] [2025-01-23T18:59:48.420Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/uk-schools-finder/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/uk-schools-finder
[debug] [2025-01-23T18:59:49.156Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/uk-schools-finder/services/firebaseextensions.googleapis.com 200
[debug] [2025-01-23T18:59:49.156Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/uk-schools-finder/services/firebaseextensions.googleapis.com [omitted]
[info] +  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2025-01-23T18:59:49.159Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:49.159Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:49.159Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder [none]
[debug] [2025-01-23T18:59:49.316Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder 200
[debug] [2025-01-23T18:59:49.316Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder {"projectNumber":"4734430040","projectId":"uk-schools-finder","lifecycleState":"ACTIVE","name":"uk-schools-finder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-01-23T18:04:57.367768Z"}
[info] i  extensions: Checking project IAM policy... 
[debug] [2025-01-23T18:59:49.317Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:49.317Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:49.318Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/instances pageSize=100&pageToken=
[debug] [2025-01-23T18:59:51.051Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/instances 200
[debug] [2025-01-23T18:59:51.052Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/instances {}
[debug] [2025-01-23T18:59:51.052Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:51.052Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:51.052Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:getIamPolicy [none]
[debug] [2025-01-23T18:59:51.278Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:getIamPolicy 200
[debug] [2025-01-23T18:59:51.278Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder:getIamPolicy {"version":1,"etag":"BwYsZDb566I=","bindings":[{"role":"roles/editor","members":["serviceAccount:4734430040@cloudservices.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:service-4734430040@gcp-sa-firebase.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-4734430040@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:lonli.lokli@gmail.com"]}]}
[debug] {"version":1,"etag":"BwYsZDb566I=","bindings":[{"role":"roles/editor","members":["serviceAccount:4734430040@cloudservices.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:service-4734430040@gcp-sa-firebase.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-4734430040@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:lonli.lokli@gmail.com"]}]}
[info] +  extensions: Project IAM policy OK 
[debug] [2025-01-23T18:59:51.476Z] Archived 110.78 KB in ./node_modules/@firebase-web-authn/extension.
[debug] [2025-01-23T18:59:51.477Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:51.477Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:51.477Z] >>> [apiv2][query] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip [none]
[debug] [2025-01-23T18:59:51.478Z] >>> [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip [stream]
[debug] [2025-01-23T18:59:52.066Z] <<< [apiv2][status] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip 200
[debug] [2025-01-23T18:59:52.066Z] <<< [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip undefined
[debug] [2025-01-23T18:59:52.068Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:52.068Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:52.068Z] >>> [apiv2][query] POST https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/sources/ [none]
[debug] [2025-01-23T18:59:52.068Z] >>> [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/sources/ {"packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip?alt=media","extensionRoot":"/"}
[debug] [2025-01-23T18:59:52.277Z] <<< [apiv2][status] POST https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/sources/ 200
[debug] [2025-01-23T18:59:52.277Z] <<< [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/sources/ {"name":"projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f","metadata":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/uk-schools-finder/sources/322aee0b-cdc4-4ae2-9e8a-c8013179ef46","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip?alt=media","extensionRoot":"/","lastOperationName":"projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f"}}
[debug] [2025-01-23T18:59:52.278Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:52.278Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:52.279Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f [none]
[debug] [2025-01-23T18:59:52.635Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f 200
[debug] [2025-01-23T18:59:52.635Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f {"name":"projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f"}
[debug] [2025-01-23T18:59:53.150Z] [LRO Poller] Retrying task index 0
[debug] [2025-01-23T18:59:53.151Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.151Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.151Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f [none]
[debug] [2025-01-23T18:59:53.545Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f 200
[debug] [2025-01-23T18:59:53.545Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f {"name":"projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f","done":true,"response":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/uk-schools-finder/sources/322aee0b-cdc4-4ae2-9e8a-c8013179ef46","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip?alt=media","hash":"cd5f9a5c0fc874cea7000cfda21a20848dabc2b5be6d860f39f3fa1afa54994c","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firebase-web-authn","version":"10.4.2","description":"Adds support for biometrics as a primary or multi-factor auth provider using WebAuthn passkeys.","apis":[{"apiName":"iamcredentials.googleapis.com","reason":"Needed for a custom auth provider to create user authentication tokens."}],"roles":[{"role":"datastore.user","reason":"Allows the extension to write updates to the database where public keys are stored."}],"resources":[{"name":"api","type":"firebaseextensions.v1beta.function","propertiesYaml":"httpsTrigger: {}\nlocation: ${param:LOCATION}\nruntime: nodejs18\nsourceDirectory: src\n","description":"Registers and authenticates WebAuthn passkeys, manages public key credentials in Firestore, and cleans up data if the user cancels a process or unlinks a passkey.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Gavin Sawyer","email":"g@vinsawyer.dev","url":"https://gavinsawyer.dev"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/gavinsawyer/firebase-web-authn/blob/main/dist/libs/extension/CHANGELOG.md","sourceUrl":"https://github.com/gavinsawyer/firebase-web-authn/tree/main/dist/libs/extension","params":[{"param":"RELYING_PARTY_NAME","label":"Relying Party Name","type":"STRING","description":"What relying party name would you like to use? This appears in the passkey window in some browsers in place of your domain name.","required":true},{"param":"RELYING_PARTY_ID","label":"Relying Party ID","type":"STRING","description":"What (optional) relying party ID would you like to use? Default behavior uses the hostname of origin, i.e. \"login.example.com\" when the origin is \"https://login.example.com:3000.\" This is for use (1.) in mobile apps without a domain–provide any domain you control in order to avoid phishing from fraudulent web-based logins–or (2.) to increase passkeys' scope when hosting the app on a subdomain–provide the highest level of domain you control."},{"param":"LOCATION","label":"Cloud Functions Location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1) (Low carbon emissions)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1) (Low carbon emissions)"},{"value":"europe-west1","label":"Belgium (europe-west1) (Low carbon emissions)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"us-west2","label":"Los Angeles (us-west2) (Tier 2 pricing)"},{"value":"us-west3","label":"Salt Lake City (us-west3) (Tier 2 pricing)"},{"value":"us-west4","label":"Las Vegas (us-west4) (Tier 2 pricing)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1) (Tier 2 pricing) (Low carbon emissions)"},{"value":"southamerica-east1","label":"São Paulo (southamerica-east1) (Tier 2 pricing) (Low carbon emissions)"},{"value":"europe-central2","label":"Warsaw (europe-central2) (Tier 2 pricing)"},{"value":"europe-west3","label":"Frankfurt (europe-west3) (Tier 2 pricing)"},{"value":"europe-west6","label":"Zurich (europe-west6) (Tier 2 pricing) (Low carbon emissions)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3) (Tier 2 pricing)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1) (Tier 2 pricing)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2) (Tier 2 pricing)"},{"value":"asia-south1","label":"Mumbai (asia-south1) (Tier 2 pricing)"},{"value":"australia-southeast1\\","label":"Sydney (australia-southeast1) (Tier 2 pricing)"}],"default":"us-central1","immutable":true},{"param":"AUTHENTICATOR_ATTACHMENT","label":"Authenticator Attachment","type":"SELECT","description":"What (optional) [authenticator attachment](https://www.w3.org/TR/webauthn-2/#enum-attachment) for primary passkeys would you like to use? \"Cross-platform\" only allows physical security keys. \"Platform\" only allows passkey managers. Default behavior is \"Any\" which allows either.","required":true,"options":[{"value":"any","label":"Any"},{"value":"platform","label":"Platform"},{"value":"cross-platform","label":"Cross-platform"}],"default":"any"},{"param":"AUTHENTICATOR_ATTACHMENT_2FA","label":"Authenticator Attachment for Secondary Passkeys (2FA)","type":"SELECT","description":"What (optional) [authenticator attachment](https://www.w3.org/TR/webauthn-2/#enum-attachment) for secondary passkeys would you like to use? Default behavior is \"Cross-platform\" which only allows physical security keys to be used for 2FA. This should differ from the previous setting as it is intended to be a fail-safe.","required":true,"options":[{"value":"cross-platform","label":"Cross-platform"},{"value":"platform","label":"Platform"}],"default":"cross-platform"},{"param":"USER_VERIFICATION_REQUIREMENT","label":"User Verification Requirement","type":"SELECT","description":"What (optional) [user verification requirement](https://www.w3.org/TR/webauthn/#enumdef-userverificationrequirement) would you like to use? Default behavior is \"Preferred\" which requests user verification when possible. \"Required\" requests user verification and fails if it is not provided, but does not apply with Authenticator Attachment set to \"Cross-platform\" since user verification isn't possible with physical security keys. If Authenticator Attachment for Secondary Passkeys (2FA) is set to \"Cross-platform,\" \"Required\" will not apply to secondary passkeys. \"Discouraged\" requests skipping user verification to speed up the interaction. See [User Presence vs. User Verification](https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/User_Presence_vs_User_Verification.html).","required":true,"options":[{"value":"required","label":"Required"},{"value":"preferred","label":"Preferred"},{"value":"discouraged","label":"Discouraged"}],"default":"preferred"}],"preinstallContent":"### 🎉 2FA passkeys are here in ^10.3.0!\n#### This update brings support for linking secondary discoverable credentials using an alternate attachment (which defaults to `\"cross-platform\"`).\n#### By specifying a `factor` parameter to existing [browser library](https://github.com/gavinsawyer/firebase-web-authn#firebase-web-authnbrowser) methods, you can enable users to gain access by inserting and activating or waving a security key over the device.\n#### See the [full docs](https://github.com/gavinsawyer/firebase-web-authn) for examples and a feature complete demo.\n\nUse this extension and the [browser library](https://github.com/gavinsawyer/firebase-web-authn#firebase-web-authnbrowser) to create and sign in users with passkeys, link and unlink existing users to passkeys, and prompt signed-in users with a biometric verification request:\n\n#### Methods\n\n```ts\ncreateUserWithPasskey: (auth: Auth, functions: Functions, name: string) => Promise<UserCredential>;\n    signInWithPasskey: (auth: Auth, functions: Functions)     => Promise<UserCredential>;\n      linkWithPasskey: (auth: Auth, functions: Functions, name: string) => Promise<UserCredential>;\n        unlinkPasskey: (auth: Auth, functions: Functions)               => Promise<void>;\nverifyUserWithPasskey: (auth: Auth, functions: Functions)               => Promise<void>;\n```\n\nDesigned to be used like the Firebase JavaScript SDK:\n\n```ts\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { createUserWithPasskey }          from \"@firebase-web-authn/browser\";\n```\n\n```ts\nclass SignUpComponent {\n\n  constructor(\n    private readonly auth: Auth,\n    private readonly functions: Functions,\n  ) {\n    // Firebase JavaScript SDK usage\n    this\n      .createUserWithEmailAndPassword = (email: string, password: string) => createUserWithEmailAndPassword(auth, email, password)\n      .then(() => void(0));\n\n    // FirebaseWebAuthn usage\n    this\n      .createUserWithPasskey = (name: string) => createUserWithPasskey(auth, functions, name)\n      .then(() => void(0));\n\n  }\n\n  public readonly createUserWithEmailAndPassword: (email: string, password: string) => Promise<void>;\n  public readonly createUserWithPasskey: (name: string) => Promise<void>;\n\n}\n```\n\nUse the [server library](https://github.com/gavinsawyer/firebase-web-authn#firebase-web-authnserver) to confirm important actions happening server-side:\n\n#### Methods\n\n```ts\n  backupEligible: (uid: string, app?: App) => Promise<boolean | null>;\nbackupSuccessful: (uid: string, app?: App) => Promise<boolean | null>;\n     credentials: (uid: string, app?: App) => Promise<{ [key in \"primary\" | \"backup\"]: WebAuthnUserCredential | null }>;\n     lastPresent: (uid: string, app?: App) => Promise<Timestamp | null>;\n    lastVerified: (uid: string, app?: App) => Promise<Timestamp | null>;\n```\n\nDesigned to be used within Firebase Functions or another secure context with access to Firestore to check users' status with FirebaseWebAuthn:\n\n```ts\nimport { getApps, initializeApp } from \"firebase-admin/app\";\nimport { lastVerified }           from \"@firebase-web-authn/server\";\n```\n\n```ts\ngetApps().length === 0 && initializeApp();\n\n// If the user was verified within the past 30 seconds, proceed. Otherwise, ask for reverification:\n(await lastVerified(user.uid))?.seconds > (Date.now() / 1000) - 30 ?\n  proceed() :\n  askForReverification();\n```\n\n### Prerequisites\n\nBefore installing this extension, you'll need to set up these services in your project. This must be done both in the Firebase Console and initialized in the application:\n- App Check with reCAPTCHA Enterprise or v3\n- Authentication with the anonymous provider\n- Firestore\n- Functions\n\n### Additional Setup\n\n1. Create a Firestore Database to store public key credentials with the ID `ext-firebase-web-authn` and location matching the function deployment. It is recommended to choose either `nam5` in North America or `eur3` in Europe and to enable delete protection:\n\n    ```\n    % firebase firestore:databases:create ext-firebase-web-authn --location ${MULTI_REGION_NAME} --delete-protection ENABLED\n    ```\n\n2. As of July 2024, [supported roles for Firebase Extensions](https://firebase.google.com/docs/extensions/publishers/access#supported-roles) do not include `iam.serviceAccounts.signBlob` or `serviceusage.services.use` which are needed for custom auth providers.\n   - After deploying the extension, grant the `Service Account Token Creator` and `Service Usage Consumer` roles to the extension's service account in [IAM](https://console.cloud.google.com/iam-admin/iam) under `Firebase Extensions firebase-web-authn service account` > Edit > Assign roles.\n   - If the service account isn't appearing, click `Grant Access` and enter its address as `ext-firebase-web-authn@${PROJECT_ID}.iam.gserviceaccount.com`\n3. The browser must reach FirebaseWebAuthn from the same domain as your website. Modify your `firebase.json` to include a rewrite on each app where you'd like to use passkeys:\n\n    ```json\n    {\n      \"hosting\": [\n        {\n          \"target\": \"...\",\n          \"rewrites\": [\n            {\n              \"source\": \"/firebase-web-authn-api\",\n              \"function\": \"ext-firebase-web-authn-api\"\n            }\n          ]\n        }\n      ]\n    }\n    ```\n\n### Billing\n\nTo install an extension, your project must be on the Blaze (pay as you go) plan. This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n- Firestore Database\n- Functions (Node.js 18 runtime)\n","postinstallContent":"### Additional Setup\n\n1. Create a Firestore Database to store public key credentials with the ID `ext-firebase-web-authn` and location matching the function deployment. It is recommended to choose either `nam5` in North America or `eur3` in Europe and to enable delete protection:\n\n    ```\n    % firebase firestore:databases:create ext-firebase-web-authn --location ${MULTI_REGION_NAME} --delete-protection ENABLED\n    ```\n\n2. As of July 2024, [supported roles for Firebase Extensions](https://firebase.google.com/docs/extensions/publishers/access#supported-roles) do not include `iam.serviceAccounts.signBlob` or `serviceusage.services.use` which are needed for custom auth providers.\n   - After deploying the extension, grant the `Service Account Token Creator` and `Service Usage Consumer` roles to the extension's service account in [IAM](https://console.cloud.google.com/iam-admin/iam) under `Firebase Extensions firebase-web-authn service account` > Edit > Assign roles.\n   - If the service account isn't appearing, click `Grant Access` and enter its address as `ext-firebase-web-authn@${PROJECT_ID}.iam.gserviceaccount.com`\n3. The browser must reach FirebaseWebAuthn from the same domain as your website. Modify your `firebase.json` to include a rewrite on each app where you'd like to use passkeys:\n\n    ```json\n    {\n      \"hosting\": [\n        {\n          \"target\":   \"...\",\n          \"rewrites\": [\n            {\n              \"source\":   \"/firebase-web-authn-api\",\n              \"function\": \"ext-firebase-web-authn-api\"\n            }\n          ]\n        }\n      ]\n    }\n    ```\n","readmeContent":"## @firebase-web-authn/extension\nA Firebase Extension for authentication with WebAuthn passkeys.\n\nThis package conforms to the Firebase Extensions spec and is available from either NPM or the Extensions Hub.\n\n[![GitHub workflow status](https://img.shields.io/github/actions/workflow/status/gavinsawyer/firebase-web-authn/ci.yml)](https://github.com/gavinsawyer/firebase-web-authn/actions/workflows/ci.yml)\n[![Latest version in NPM](https://img.shields.io/npm/v/@firebase-web-authn/extension?logo=npm)](https://www.npmjs.com/package/@firebase-web-authn/extension)\n#### Demo: https://firebase-web-authn.dev\n### Installation\n[![Install](https://img.shields.io/static/v1?label=&message=Install%20in%20Firebase%20console&logo=firebase&color=blue)](https://console.firebase.google.com/u/0/project/_/extensions/install?ref=gavinsawyer%2Ffirebase-web-authn)\n\nTo install from the Extensions Hub, click the button above or run the following commands in your project root:\n```\n% firebase ext:install gavinsawyer/firebase-web-authn\n```\nTo install from NPM, run the following commands in your project root:\n```\n% npm i @firebase-web-authn/extension --save-dev\n% firebase ext:install ./node_modules/@firebase-web-authn/extension\n```\nUsing NPM is recommended to receive updates to the extension alongside other FirebaseWebAuthn dependencies.\n### Prerequisites\nBefore installing this extension, you'll need to set up these services in your project. This must be done both in the Firebase Console and initialized in the application:\n- App Check with reCAPTCHA Enterprise or v3\n- Authentication with the anonymous provider\n- Firestore\n- Functions\n### Additional setup:\n1. Create a Firestore Database to store public key credentials with the ID `ext-firebase-web-authn` and location matching the function deployment. It is recommended to choose either `nam5` in North America or `eur3` in Europe and to enable delete protection:\n\n    ```\n    % firebase firestore:databases:create ext-firebase-web-authn --location ${MULTI_REGION_NAME} --delete-protection ENABLED\n    ```\n\n2. As of July 2024, [supported roles for Firebase Extensions](https://firebase.google.com/docs/extensions/publishers/access#supported-roles) do not include `iam.serviceAccounts.signBlob` or `serviceusage.services.use` which are needed for custom auth providers.\n   - After deploying the extension, grant the `Service Account Token Creator` and `Service Usage Consumer` roles to the extension's service account in [IAM](https://console.cloud.google.com/iam-admin/iam) under `Firebase Extensions firebase-web-authn service account` > Edit > Assign roles.\n   - If the service account isn't appearing, click `Grant Access` and enter its address as `ext-firebase-web-authn@${PROJECT_ID}.iam.gserviceaccount.com`\n3. The browser must reach FirebaseWebAuthn from the same domain as your website. Modify your `firebase.json` to include a rewrite on each app where you'd like to use passkeys:\n\n    ```json\n    {\n      \"hosting\": [\n        {\n          \"target\":   \"...\",\n          \"rewrites\": [\n            {\n              \"source\":   \"/firebase-web-authn-api\",\n              \"function\": \"ext-firebase-web-authn-api\"\n            }\n          ]\n        }\n      ]\n    }\n    ```\n\n## More packages\n- [@firebase-web-authn/browser](https://github.com/gavinsawyer/firebase-web-authn/tree/main/libs/browser)\n- [@firebase-web-authn/server](https://github.com/gavinsawyer/firebase-web-authn/tree/main/libs/server)\n","displayName":"Authenticate with WebAuthn","systemParams":[{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true},{"param":"firebaseextensions.v1beta.function/kmsKeyName","label":"KMS key name","type":"STRING","description":"Do you want to use a Customer Managed Encryption Key (CMEK) to encrypt this extension's functions? If you set this, you must also set a Docker repository encrypted by that key. See https://cloud.google.com/functions/docs/securing/cmek for more details.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/dockerRepository","label":"Docker repository","type":"STRING","description":"What Docker repository should be used to store function images? Default repository will be used if not set.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/repositories/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each v1 function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true}],"icon":"icon.png","tags":["utilities"]},"fetchTime":"2025-01-23T18:59:53.096075Z","lastOperationName":"projects/uk-schools-finder/operations/f9be15f0-0ccc-4fd8-b5a3-cd67fdbf006f","state":"ACTIVE","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/unpublished/1e04149a2d06a27dd4f7ce83a73916d9f11bdd3b75348cac467f22535e1b79f5"}}
[debug] [2025-01-23T18:59:53.556Z] Created new Extension Source %s projects/uk-schools-finder/sources/322aee0b-cdc4-4ae2-9e8a-c8013179ef46
[debug] [2025-01-23T18:59:53.557Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.557Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.557Z] >>> [apiv2][query] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip [none]
[debug] [2025-01-23T18:59:53.913Z] <<< [apiv2][status] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip 204
[debug] [2025-01-23T18:59:53.913Z] <<< [apiv2][body] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--26012-rY0ByCJ2exjS-.zip undefined
[debug] [2025-01-23T18:59:53.914Z] Cleaned up uploaded source archive
[debug] [2025-01-23T18:59:53.914Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.914Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T18:59:53.914Z] >>> [apiv2][query] GET https://iam.googleapis.com/v1/roles/datastore.user [none]
[debug] [2025-01-23T18:59:54.529Z] <<< [apiv2][status] GET https://iam.googleapis.com/v1/roles/datastore.user 200
[debug] [2025-01-23T18:59:54.529Z] <<< [apiv2][body] GET https://iam.googleapis.com/v1/roles/datastore.user {"name":"roles/datastore.user","title":"Cloud Datastore User","description":"Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.","includedPermissions":["appengine.applications.get","datastore.databases.get","datastore.databases.getMetadata","datastore.databases.list","datastore.entities.allocateIds","datastore.entities.create","datastore.entities.delete","datastore.entities.get","datastore.entities.list","datastore.entities.update","datastore.indexes.list","datastore.namespaces.get","datastore.namespaces.list","datastore.statistics.get","datastore.statistics.list","resourcemanager.projects.get","resourcemanager.projects.list"],"stage":"GA","etag":"AA=="}
[info] 
Extension: Authenticate with WebAuthn 
Description: Adds support for biometrics as a primary or multi-factor auth provider using WebAuthn passkeys.
Version: 10.4.2 
License: Apache-2.0
Resources created:
  - api (Cloud Function (1st gen)): Registers and authenticates WebAuthn passkeys, manages public key credentials in Firestore, and cleans up data if the user cancels a process or unlinks a passkey.
APIs used:
  - iamcredentials.googleapis.com: Needed for a custom auth provider to create user authentication tokens.
Roles granted:
  - Cloud Datastore User: Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.
[debug] [2025-01-23T19:00:05.616Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T19:00:05.616Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T19:00:05.617Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/uk-schools-finder/adminSdkConfig [none]
[debug] [2025-01-23T19:00:05.961Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/uk-schools-finder/adminSdkConfig 200
[debug] [2025-01-23T19:00:05.961Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/uk-schools-finder/adminSdkConfig {"projectId":"uk-schools-finder","storageBucket":"uk-schools-finder.firebasestorage.app"}
[debug] [2025-01-23T19:00:05.962Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T19:00:05.962Z] Checked if tokens are valid: true, expires at: 1737662323905
[debug] [2025-01-23T19:00:05.962Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder [none]
[debug] [2025-01-23T19:00:06.587Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder 200
[debug] [2025-01-23T19:00:06.587Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/uk-schools-finder {"projectNumber":"4734430040","projectId":"uk-schools-finder","lifecycleState":"ACTIVE","name":"uk-schools-finder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-01-23T18:04:57.367768Z"}
[info] i  extensions: answer the questions below to configure your extension: 
[info] 
Relying Party Name: What relying party name would you like to use? This appears in the passkey window in some browsers in place of your domain name.
[info] 
Relying Party ID (Optional): What (optional) relying party ID would you like to use? Default behavior uses the hostname of origin, i.e. "login.example.com" when the origin is "https://login.example.com:3000." This is for use (1.) in mobile apps without a domain–provide any domain you control in order to avoid phishing from fraudulent web-based logins–or (2.) to increase passkeys' scope when hosting the app on a subdomain–provide the highest level of domain you control.
[info] 
Cloud Functions Location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the location selection guide (https://firebase.google.com/docs/functions/locations).
