'use client';

import { Card, Typography } from 'antd';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css';
import {
  MapContainer,
  TileLayer,
  useMap,
  useMapEvents,
  Marker,
  Popup,
} from 'react-leaflet';
import { usePathname, useRouter, useSearchParams } from 'next/navigation';
import { useCallback, useEffect } from 'react';
import { QuadrantSchoolDm } from '@lonli-lokli/shapes';

const { Title, Text } = Typography;

// Custom icon
const schoolIcon = L.divIcon({
  html: `<svg class="svg-icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M511.994886 0.010228 0.066482 511.877265 93.150882 511.877265 93.150882 1023.826125 372.373399 1023.826125 372.373399 605.002577 651.595917 605.002577 651.595917 1023.826125 930.859346 1023.826125 930.859346 511.877265 1023.923291 511.877265Z"  /><path d="M418.78775 651.641943l186.363132 0 0 372.358057-186.363132 0 0-372.358057Z"  /><path d="M418.78775 651.641943l186.363132 0 0 372.358057-186.363132 0 0-372.358057Z"  /><path d="M342.139635 449.435746c0 6.914081-2.700174 12.21215-8.110749 15.883977-5.400348 3.671827-12.21215 5.512855-20.425178 5.512855-10.38135 0-18.379592-2.055814-23.994726-6.157214-5.625362-4.111628-8.427815-10.054056-8.427815-17.837512l12.969017 0c0 5.185561 1.841028 8.65283 5.512855 10.38135s8.100521 2.597894 13.29631 2.597894 9.082403-0.971653 11.670069-2.925188c2.597894-1.943307 3.896842-4.428694 3.896842-7.456162 0-2.158093-1.084161-4.326415-3.242254-6.484508s-7.568669-3.886614-16.211271-5.185561c-9.951777-1.288719-16.753351-3.784334-20.435406-7.456162s-5.512855-8.540322-5.512855-14.595258c0-5.185561 2.485387-9.83927 7.456162-13.94067 4.970774-4.1014 12.21215-6.167442 21.724126-6.167442 8.642602 0 15.454404 1.943307 20.435406 5.840149 4.970774 3.886614 7.456162 9.082403 7.456162 15.566911l-12.969017 0c0-3.886614-1.411454-6.597016-4.213908-8.110749-2.812681-1.513734-6.382229-2.270601-10.698416-2.270601-5.625362 0-9.614255 0.971653-11.997363 2.91496-2.37288 1.943307-3.569548 4.213908-3.569548 6.811802 0 3.027468 1.084161 5.400348 3.242254 7.128868 2.158093 1.72852 6.699295 3.027468 13.623604 3.896842 11.240496 1.72852 18.809165 4.428694 22.695779 8.100521S342.139635 443.820612 342.139635 449.435746z"  /><path d="M427.747418 440.363571c0 9.082403-3.129747 16.426057-9.399469 22.051419-6.269722 5.625362-14.155457 8.427815-23.667432 8.427815-9.511976 0-17.725004-3.354761-24.639086-10.054056-6.924309-6.699295-10.38135-15.883977-10.38135-27.564274 0-11.670069 3.457041-20.864979 10.38135-27.564274 6.914081-6.699295 15.12711-10.054056 24.639086-10.054056 9.511976 0 17.080645 2.485387 22.706007 7.456162 5.615134 4.970774 8.427815 10.913202 8.427815 17.837512l-14.267964 0c-0.429573-5.185561-2.270601-8.755109-5.512855-10.698416-3.242254-1.943307-7.026589-2.91496-11.353003-2.91496-5.185561 0-9.941549 2.055814-14.267964 6.157214-4.316187 4.111628-6.484508 10.698416-6.484508 19.780819s2.158093 15.679418 6.484508 19.780819c4.326415 4.111628 9.082403 6.167442 14.267964 6.167442 5.625362 0 10.166563-1.513734 13.623604-4.541201 3.457041-3.027468 5.185561-7.783456 5.185561-14.267964L427.747418 440.363571z"  /><path d="M509.458359 469.543858l-12.969017 0 0-46.690505c0-5.185561-1.298947-9.297189-3.886614-12.324657-2.597894-3.027468-6.054935-4.541201-10.38135-4.541201-5.625362 0-10.913202 2.91496-15.894205 8.755109-4.970774 5.840149-7.456162 13.081524-7.456162 21.734353l0 33.077129-12.969017 0L445.901996 358.642402l12.969017 0 0 51.886294c3.457041-4.755988 7.241375-8.427815 11.342776-11.02571 4.111628-2.587667 9.399469-3.886614 15.894205-3.886614 7.783456 0 13.623604 2.158093 17.510218 6.484508s5.840149 9.726762 5.840149 16.211271L509.458359 469.543858z"  /><path d="M595.72073 433.224475c0 11.240496-3.457041 20.322899-10.38135 27.247208-6.914081 6.914081-15.12711 10.371122-24.639086 10.371122s-17.725004-3.457041-24.639086-10.371122c-6.924309-6.924309-10.38135-15.996484-10.38135-27.247208s3.457041-20.322899 10.38135-27.23698c6.914081-6.914081 15.12711-10.38135 24.639086-10.38135s17.725004 3.457041 24.639086 10.38135C592.263689 412.901576 595.72073 421.983979 595.72073 433.224475zM581.452766 433.224475c0-8.642602-2.168321-15.12711-6.484508-19.453525-4.326415-4.316187-9.082403-6.484508-14.278192-6.484508-5.185561 0-9.951777 2.158093-14.267964 6.484508-4.326415 4.326415-6.494736 10.810923-6.494736 19.453525 0 8.65283 2.168321 15.12711 6.494736 19.453525 4.316187 4.326415 9.082403 6.484508 14.267964 6.484508 5.195789 0 9.951777-2.158093 14.278192-6.484508C579.284444 448.351585 581.452766 441.877305 581.452766 433.224475z"  /><path d="M678.740846 433.224475c0 11.240496-3.467269 20.322899-10.38135 27.247208-6.924309 6.914081-15.12711 10.371122-24.649314 10.371122-9.511976 0-17.725004-3.457041-24.639086-10.371122-6.924309-6.924309-10.38135-15.996484-10.38135-27.247208s3.457041-20.322899 10.38135-27.23698c6.914081-6.914081 15.12711-10.38135 24.639086-10.38135 9.522204 0 17.725004 3.457041 24.649314 10.38135C675.273577 412.901576 678.740846 421.983979 678.740846 433.224475zM664.462654 433.224475c0-8.642602-2.158093-15.12711-6.484508-19.453525-4.326415-4.316187-9.082403-6.484508-14.278192-6.484508-5.185561 0-9.941549 2.158093-14.267964 6.484508-4.326415 4.326415-6.494736 10.810923-6.494736 19.453525 0 8.65283 2.168321 15.12711 6.494736 19.453525s9.082403 6.484508 14.267964 6.484508c5.195789 0 9.951777-2.158093 14.278192-6.484508S664.462654 441.877305 664.462654 433.224475z"  /><path d="M733.214807 469.543858 720.235562 469.543858 720.235562 358.642402l12.979244 0L733.214807 469.543858z"  /></svg>`,
  className: 'school-marker',
  iconSize: [32, 32],
  iconAnchor: [16, 32],
  popupAnchor: [0, -32],
});

type ClientMapProps = {
  schools: QuadrantSchoolDm[];
  center: [number, number];
  zoom: number;
};

export function ClientMap({ schools, center, zoom }: ClientMapProps) {
  return (
    <MapContainer
      center={center}
      zoom={zoom}
      className="h-full w-full"
      style={{ height: '100%' }}
    >
      <ViewportHandler />
      <TileLayer
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      />
      {schools.map((school) => (
        <Marker
          key={school.urn}
          position={[school.location.lat, school.location.lng]}
          icon={schoolIcon}
        >
          <Popup className="school-popup">
            <Card bordered={false} className="!shadow-none">
              <Title level={5} className="!m-0">
                {school.name}
              </Title>
              {school.type && (
                <Text type="secondary" className="block">
                  {school.type}
                </Text>
              )}

              {school.capacity && (
                <Text type="secondary" className="block text-sm">
                  {school.capacity} pupils
                </Text>
              )}
            </Card>
          </Popup>
        </Marker>
      ))}
    </MapContainer>
  );
}

function ViewportHandler() {
  const map = useMap();
  const router = useRouter();
  const searchParams = useSearchParams();
  const pathname = usePathname();

  const updateViewportParams = useCallback(() => {
    const bounds = map.getBounds();
    const params = new URLSearchParams(searchParams);

    params.set('ne_lat', bounds.getNorthEast().lat.toString());
    params.set('ne_lng', bounds.getNorthEast().lng.toString());
    params.set('sw_lat', bounds.getSouthWest().lat.toString());
    params.set('sw_lng', bounds.getSouthWest().lng.toString());
    params.set('zoom', map.getZoom().toString());

    router.push(`${pathname}?${params.toString()}`);
  }, [map, router, searchParams, pathname]);

  useEffect(() => {
    // Initial bounds update
    updateViewportParams();
  }, [updateViewportParams]);

  useMapEvents({
    moveend: updateViewportParams,
    zoomend: updateViewportParams,
  });

  return null;
}
